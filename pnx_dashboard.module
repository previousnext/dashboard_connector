<?php

/**
 * @file
 * Core implementation for pnx_dashboard module.
 */

define('PNX_DASHBOARD_PERMISSION', 'administer pnx dashboard module');

/**
 * Implements hook_permission().
 */
function pnx_dashboard_permission() {
  return array(
    PNX_DASHBOARD_PERMISSION => array(
      'title' => t('Administer pnx dashboard'),
      'description' => t('Perform administration tasks on pnx dashboard module.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function pnx_dashboard_menu() {
  return array(
    'admin/config/development/pnx-dashboard' => array(
      'title' => 'PNX Status',
      'description' => 'Configure the PreviousNext dashboard module',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pnx_dashboard_admin'),
      'access arguments' => array(PNX_DASHBOARD_PERMISSION),
      'file' => 'pnx_dashboard.admin.inc',
    ),
  );
}

/**
 * Implements hook_cron().
 */
function pnx_dashboard_cron() {
  $last_run = variable_get('pnx_dashboard_last_run', 0);
  // Don't run more than once a day.
  if ($last_run + 86400 > REQUEST_TIME) {
    /* @var \SystemQueue $queue */
    $queue = \DrupalQueue::get('pnx_dashboard_send');
    ctools_include('plugins');
    foreach (ctools_get_plugins('pnx_dashboard',
      'dashboard') as $id => $plugin) {
      $class = $plugin['class'];
      /* @var \DashboardCheckInterface $instance */
      $instance = new $class();
      foreach ($instance->check() as $entry) {
        $queue->createItem($entry);
      }
    }
    variable_set('pnx_dashboard_last_run', REQUEST_TIME);
  }
}

/**
 * Helper function to get endpoint.
 */
function _pnx_dashboard_endpoint() {
  return variable_get('pnx_dashboard_endpoint', '');
}

/**
 * Implements hook_cron_queue_info().
 */
function pnx_dashboard_cron_queue_info() {
  $queues = array();

  $queues['pnx_dashboard_send'] = array(
    'worker callback' => 'pnx_dashboard_send_worker_wrapper',
    'time' => 120,
  );

  return $queues;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function pnx_dashboard_ctools_plugin_directory($module, $type) {
  return 'plugins/' . $type;
}

/**
 * Implements hook_ctools_plugin_type().
 */
function pnx_dashboard_ctools_plugin_type() {
  return array(
    'dashboard' => array(
      'classes' => array('class info'),
      'cache' => FALSE,
      'extension' => 'php'
    ),
  );
}

/**
 * Queue worker callback.
 *
 * @param \DashboardEntryInterface $entry
 *   Entry to send.
 */
function pnx_dashboard_send_worker_wrapper(DashboardEntryInterface $entry) {
  DashboardEntryQueueWorker::sendItem($entry, _pnx_dashboard_endpoint());
}
