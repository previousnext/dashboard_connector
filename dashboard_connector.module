<?php

/**
 * @file
 * Core implementation for pnx_dashboard module.
 */

use PNX\Dashboard\Check;

define('DASHBOARD_CONNECTOR_ADMIN_PERMISSION', 'administer pnx dashboard module');

/**
 * Implements hook_ctools_plugin_directory().
 */
function dashboard_connector_ctools_plugin_directory($module, $type) {
  if ($module == 'dashboard_connector') {
    return 'src/Dashboard/' . $type;
  }
  if ($module == 'service_container') {
    return 'src/ServiceContainer/' . $type;
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function dashboard_connector_ctools_plugin_type() {
  return [
    'Checker' => [
      'cache' => FALSE,
    ],
  ];
}

/**
 * Implements drupal_alter().
 *
 * @param array $container_definition
 *   The fully build container definition that can be altered by modules now.
 */
function dashboard_connector_service_container_container_build_alter(&$container_definition) {
  $container_definition['parameters']['dashboard_connector.base_uri'] = variable_get('dashboard_connector_base_uri', 'https://status.previousnext.com.au');
  $container_definition['parameters']['dashboard_connector.client_id'] = variable_get('dashboard_connector_client_id');
  $container_definition['parameters']['dashboard_connector.site_id'] = variable_get('dashboard_connector_site_id');
  $container_definition['parameters']['dashboard_connector.username'] = variable_get('dashboard_connector_username');
  $container_definition['parameters']['dashboard_connector.password'] = variable_get('dashboard_connector_password');
}

/**
 * Implements hook_permission().
 */
function dashboard_connector_permission() {
  return array(
    DASHBOARD_CONNECTOR_ADMIN_PERMISSION => array(
      'title' => t('Administer pnx dashboard'),
      'description' => t('Perform administration tasks on pnx dashboard module.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dashboard_connector_menu() {
  return array(
    'admin/config/development/pnx-dashboard' => array(
      'title' => 'PNX Status Dashboard Connector',
      'description' => 'Configure the PreviousNext dashboard module',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('dashboard_connector_admin'),
      'access arguments' => array(DASHBOARD_CONNECTOR_ADMIN_PERMISSION),
      'file' => 'dashboard_connector.admin.inc',
    ),
  );
}

/**
 * Implements hook_cron().
 */
function dashboard_connector_cron() {
  if (variable_get('dashboard_connector_enabled', FALSE)) {
    watchdog('dashboard_connector', 'Sending checks.');
    dashboard_connector_send();
    watchdog('dashboard_connector', 'Checks sent.');
  }
}

/**
 * Sends check data to the PNX Dashboard.
 */
function dashboard_connector_send() {
  $checks = [];
  // Collect checks from plugins.
  ctools_include('plugins');
  foreach (ctools_get_plugins('dashboard_connector', 'Checker') as $id => $plugin) {
    $class = $plugin['class'];
    /* @var \Drupal\dashboard_connector\Dashboard\Checker\CheckerInterface $instance */
    $instance = new $class();
    $checks = array_merge($checks, $instance->getChecks());
  }
  /* @var \PNX\Dashboard\DashboardClientInterface $client */
  $client = \Drupal::service('dashboard_connector.client');
  $client->send($checks);
}
